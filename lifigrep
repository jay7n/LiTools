#!/bin/bash

set -f

GREP_RES=/tmp/lifigrep_res
MAX_LINE_COUNT_WIHTOUT_LESS=100

arr_not_paths=()
arr_paths=()

arr_not_files=()
arr_files=()

arr_regexps=()
arr_not_regexps=()
arr_exc_regexps=()

grep_ignore_case=""
verbose=""

while getopts "P:p:F:f:R:r:e:vi" options
do
    case ${options} in
        P)
            arr_not_paths+="$OPTARG "
            ;;
        p)
            arr_paths+="$OPTARG "
            ;;
        F)
            arr_not_files+="$OPTARG "
            ;;
        f)
            arr_files+="$OPTARG "
            ;;
        R)
            arr_not_regexps+="$OPTARG "
            ;;
        r)
            arr_regexps+="$OPTARG "
            ;;
        e)
            arr_exc_regexps+="$OPTARG "
            ;;
        i)
            grep_ignore_case="-i "
            ;;
        v)
            verbose="true"
            ;;

    esac
done

#from http://stackoverflow.com/questions/11742996/shell-script-is-mixing-getopts-with-positional-parameters-possible
    #path=${@:$OPTIND:1}
    #file=${@:$OPTIND+1:1}
    #pattern=${@:$OPTIND+2:1}

arg_find_path=""
arg_find_name=""
arg_grep_patterns=""
arg_grep_not_patterns=""
arg_grep_exc_patterns=""

for i in ${arr_paths[@]}
do
    arg_find_path+="$i "
done

for i in ${arr_not_paths[@]}
do
    arg_find_path+="! -path \"$i/*\" "
done

for i in ${arr_files[@]}
do
    arg_find_name+="-name \"$i\" -o "
done
arg_find_name=`echo $arg_find_name|sed 's/-o$/-a /'`

for i in ${arr_not_files[@]}
do
    arg_find_name+="! -name \"$i\" -a "
done
arg_find_name=`echo $arg_find_name|sed 's/-a$//'`

for i in ${arr_regexps[@]}
do
    arg_grep_patterns+="($i)|"
done
arg_grep_patterns=`echo $arg_grep_patterns|sed 's/.$//'`

for i in ${arr_not_regexps[@]}
do
    arg_grep_not_patterns+="($i)|"
done
arg_grep_not_patterns=`echo $arg_grep_not_patterns|sed 's/.$//'`

for i in ${arr_exc_regexps[@]}
do
    arg_grep_exc_patterns+="($i)|"
done
arg_grep_exc_patterns=`echo $arg_grep_exc_patterns|sed 's/.$//'`

find_path_name="find $arg_find_path \( $arg_find_name \)"
exec_grep="-exec grep "
if [ "$arg_grep_not_patterns" != "" ]; then
    exec_grep+="-I -n $grep_ignore_case -E \"$arg_grep_patterns\"  {} + "
    exec_grep+="| grep -v -n $grep_ignore_case -E \"$arg_grep_not_patterns\" "
    exec_grep+="| grep --color=always -n $grep_ignore_case -E \"$arg_grep_patterns\" "
else
    exec_grep+="--color=always -I -n $grep_ignore_case -E \"$arg_grep_patterns\"  {} + "
fi
exec_grep+=">> $GREP_RES"

exec_grep_exc="-exec grep --color=always -I -s -n $grep_ignore_case -v -E \"$arg_grep_exc_patterns\"  {} + >> $GREP_RES"

IFS_BK=$IFS
IFS=""

cmd=()
cmd[0]="echo \"\" > $GREP_RES; "

if [ "$arg_grep_patterns" != "" ]; then
    cmd[1]="$find_path_name $exec_grep; "
else
    cmd[1]="$find_path_name; "
fi

if [ "$arg_grep_exc_patterns" != "" ]; then
    cmd[2]="$find_path_name $exec_grep_exc; "
fi

cmd[3]="cat $GREP_RES; "

if [ "$verbose" == "true" ]; then
    echo "verbose commands:"
    for c in ${cmd[@]}
    do
        printf "\t"
        echo $c
    done
fi
eval "${cmd[@]}"

#declare -i lc=$(wc -l $GREP_RES | awk '{print $1}')

#if [ $lc -gt $MAX_LINE_COUNT_WIHTOUT_LESS ]; then
#    cat $GREP_RES | less -r
#else
#    cat $GREP_RES
#fi


IFS=$IFS_BK

set +f
